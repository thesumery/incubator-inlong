#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: InLong Docker Build and Push

on:
  push:
    paths:
      - '.github/workflows/ci_docker.yml'
      - '**/pom.xml'
      - 'inlong-agent/**'
      - 'inlong-audit/**'
      - 'inlong-common/**'
      - 'inlong-dashboard/**'
      - 'inlong-dataproxy/**'
      - 'inlong-distribution/**'
      - 'inlong-manager/**'
      - 'inlong-sdk/**'
      - 'inlong-sort/**'
      - 'inlong-sort-standalone/**'
      - 'inlong-tubemq/**'
      - '!**.md'

  pull_request:
    paths:
      - '.github/workflows/ci_docker.yml'
      - '**/Dockerfile'
      - 'inlong-agent/agent-docker/**'
      - 'inlong-audit/audit-docker/**'
      - 'inlong-dataproxy/dataproxy-docker/**'
      - 'inlong-manager/manager-docker/**'
      - 'inlong-tubemq/tubemq-docker/**'
      - '!**.md'

jobs:
  docker:
    name: Docker build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: adopt

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/inlong
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Docker images
        run: mvn --batch-mode --update-snapshots -e -V clean package -DskipTests -Pdocker
        env:
          CI: false

      - name: Match branch
        id: match
        if: |
          success()
          && github.event_name == 'push'
          && github.repository_owner == 'apache'
        run: |
          if [[ ${{ github.ref_name }} == ${{ github.event.repository.default_branch }} ]]; then
            echo "::set-output name=match_master::true"
          elif [[ ${{ github.ref_name }} =~ ^branch-[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=match_release::true"
          fi

      # Publish x86 Docker images when the changes are being pushed to the master branch or a release branch like 'branch-1.4'.
      - name: Push x86 Docker images to Docker Hub
        if: |
          steps.match.outputs.match_master == 'true'
          || steps.match.outputs.match_release == 'true'
        working-directory: docker
        run: |
          bash +x publish-by-arch.sh --tag --publish
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_ORG: inlong

      # Publish aarch64 Docker images when the changes are being pushed to a release branch like 'branch-1.4'.
      - name: Push aarch64 Docker images to Docker Hub
        if: ${{ steps.match.outputs.match_release == 'true' }}
        working-directory: docker
        run: |
          bash +x build-docker-images.sh --buildx aarch64
          bash +x publish-by-arch.sh --tag --arch aarch64 --publish
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_ORG: inlong

      # Push manifest after publishing aarch64 Docker images.
      - name: Push manifest to Docker Hub
        if: ${{ steps.match.outputs.match_release == 'true' }}
        working-directory: docker
        run: |
          bash +x publish-by-arch.sh --manifest
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
